name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package.json'

      - name: Build frontend
        run: |
          cd web
          npm install
          npm run build

      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Install Go gRPC plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Generate gRPC code
        run: |
          chmod +x gen.sh
          ./gen.sh

      - name: Build binaries
        run: |
          mkdir release
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o release/coder-web-linux-amd64 ./cmd/coder-web
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o release/coder-web-darwin-amd64 ./cmd/coder-web
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o release/coder-web-darwin-arm64 ./cmd/coder-web
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o release/coder-web-windows-amd64.exe ./cmd/coder-web

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/coder-web-linux-amd64
            release/coder-web-darwin-amd64
            release/coder-web-darwin-arm64
            release/coder-web-windows-amd64.exe
